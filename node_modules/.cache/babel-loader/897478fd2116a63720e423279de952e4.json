{"ast":null,"code":"import _classCallCheck from \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/src/components/image-results/ImageResults.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nvar ImageResults =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageResults, _Component);\n\n  function ImageResults() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageResults);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageResults)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      currentImg: ''\n    };\n\n    _this.handleOpen = function (img) {\n      _this.setState({\n        open: true,\n        currentImg: img\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var imageListContent;\n      var images = this.props.images;\n\n      if (images) {\n        imageListContent = React.createElement(GridList, {\n          cols: 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, images.map(function (img) {\n          return React.createElement(GridTile, {\n            title: img.tags,\n            key: img.id,\n            subtitle: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \"by \", React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 36\n              },\n              __self: this\n            }, img.user)),\n            actionIcon: React.createElement(IconButton, {\n              onClick: function onClick() {\n                return _this2.handleOpen(img.largeImageURL);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, React.createElement(ZoomIn, {\n              color: \"white\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            })),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            src: img.largeImageURL,\n            alt: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }));\n        }));\n      } else {\n        imageListContent = null;\n      }\n\n      var actions = [React.createElement(FlatButton, {\n        label: \"Close\",\n        primary: true,\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, imageListContent, React.createElement(Dialog, {\n        actions: actions,\n        modal: false,\n        open: this.state.open,\n        onRequestClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.currentImg,\n        alt: \"\",\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ImageResults;\n}(Component);\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\nexport default ImageResults;","map":{"version":3,"sources":["/Users/rudreshnarwal/Documents/React-Material-UI-template-PixaBay-API-/src/components/image-results/ImageResults.js"],"names":["React","Component","PropTypes","GridList","GridTile","IconButton","ZoomIn","Dialog","FlatButton","ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageListContent","images","props","map","tags","id","user","largeImageURL","actions","width","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n  state = {\n    open: false,\n    currentImg: ''\n  };\n\n  handleOpen = img => {\n    this.setState({ open: true, currentImg: img });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    let imageListContent;\n    const { images } = this.props;\n\n    if (images) {\n      imageListContent = (\n        <GridList cols={3}>\n          {images.map(img => (\n            <GridTile\n              title={img.tags}\n              key={img.id}\n              subtitle={\n                <span>\n                  by <strong>{img.user}</strong>\n                </span>\n              }\n              actionIcon={\n                <IconButton onClick={() => this.handleOpen(img.largeImageURL)}>\n                  <ZoomIn color=\"white\" />\n                </IconButton>\n              }\n            >\n              <img src={img.largeImageURL} alt=\"\" />\n            </GridTile>\n          ))}\n        </GridList>\n      );\n    } else {\n      imageListContent = null;\n    }\n\n    const actions = [\n      <FlatButton label=\"Close\" primary={true} onClick={this.handleClose} />\n    ];\n\n    return (\n      <div>\n        {imageListContent}\n        <Dialog\n          actions={actions}\n          modal={false}\n          open={this.state.open}\n          onRequestClose={this.handleClose}\n        >\n          <img src={this.state.currentImg} alt=\"\" style={{ width: '100%' }} />\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nImageResults.propTypes = {\n  images: PropTypes.array.isRequired\n};\n\nexport default ImageResults;\n"]},"metadata":{},"sourceType":"module"}